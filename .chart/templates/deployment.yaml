apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mi-scale.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Name }}
  labels:
    {{- include "mi-scale.labels" . | nindent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas | default 1 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      {{- include "mi-scale.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mi-scale.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: config
            mountPath: "/data"
            readOnly: true
          - name: {{ .Values.options.dbusSocket.volume }}
            mountPath: {{ .Values.options.dbusSocket.mountPath }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          secret:
            secretName: {{ .Values.configSecretName }}
            optional: false
        - name: {{ .Values.options.dbusSocket.volume }}
          hostPath:
            path: {{ .Values.options.dbusSocket.hostPath }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}